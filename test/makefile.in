#
# @package_copyright@
#
# @configure_input@
#

.POSIX :

.SUFFIXES :
A = .@LIBEXT@
O = .@OBJEXT@
E = @EXEEXT@
.SUFFIXES : .c .i $O $A

#
# Paths for supporting headers and libraries.
#
top_srcdir 	= @top_srcdir@
abs_srcdir 	= @abs_srcdir@

prefix 		= @prefix@
exec_prefix 	= @exec_prefix@
bindir 		= @bindir@
libdir 		= @libdir@/post4

CC		= @CC@
CC_E		= @CC_E@
CC_O		= @CC_O@
CPPFLAGS	= @CPPFLAGS@
CFLAGS		= @CFLAGS@ -Wno-unused-label -funsigned-char -Wno-unused-const-variable
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@

PROG		= ${top_srcdir}/src/post4$E
WORDS		= ${top_srcdir}/src/post4.p4
POST4_PATH	= POST4_PATH='.:${top_srcdir}/src:${top_srcdir}/examples'

BUILT		:= `date +'%a, %d %b %Y %H:%M:%S %z'`

#######################################################################

.MAIN : build

all: build

build: title post4$E

clean : title
	-rm -f *.o *.obj *.i *.map *.tds *.TR2 *.stackdump core *.core core.* *.log
	-rm -f a.out$E see.out post4$E

clobber distclean: clean
	-rm -f config.h config.h.in makefile

realclean: distclean

title :
	@echo
	@echo '***************************************************************'
	@echo '==> '${abs_srcdir}
	@echo '***************************************************************'
	@echo

tests: test_include_quit test_include_abort test_include_throw test_quit_catch see_all test_unit

test test_unit : ${PROG}
	@printf "==== Unit Testing\n"
	${POST4_PATH} ${PROG} ./units.p4
	@echo

test_quit_catch : ${PROG}
	@printf "==== Testing QUIT with CATCH\n"
	! printf "' QUIT CATCH \n ABORT" | ${PROG} -c ${WORDS}
	! printf "' QUIT CATCH \n -1 THROW" | ${PROG} -c ${WORDS}
	! printf "' QUIT CATCH \n -123 THROW" | ${PROG} -c ${WORDS}
	printf 'S" 0 THROW" '\'' EVALUATE CATCH' | ${PROG} -c ${WORDS}
	printf 'S" -1 THROW" '\'' EVALUATE CATCH' | ${PROG} -c ${WORDS}
	! printf ": tw_keep_ds [: 123 QUIT ;] CATCH 456 . THROW ;\n tw_keep_ds \n . CR" | ${PROG} -c ${WORDS}
	@echo "-OK-"

# GH-54
test_include_quit: ${PROG}
	@printf "====  Testing INCLUDE with QUIT\n"
	! ${PROG} -c ${WORDS} <${top_srcdir}/test/data/quit0.p4
	! echo | ${PROG} -c ${WORDS} ${top_srcdir}/test/data/quit0.p4
	! echo | ${PROG} -c ${WORDS} -i ${top_srcdir}/test/data/quit0.p4
	! printf "INCLUDE ${top_srcdir}/test/data/quit0.p4" | ${PROG} -c ${WORDS}
	! printf "INCLUDE ${top_srcdir}/test/data/quit0.p4 \n BYE" | ${PROG} -c ${WORDS}
	@echo "-OK-"

# GH-54
test_include_abort: ${PROG}
	@printf "====  Testing INCLUDE with ABORT\n"
	! ${PROG} -c ${WORDS} <${top_srcdir}/test/data/abort0.p4
	! echo | ${PROG} -c ${WORDS} ${top_srcdir}/test/data/abort0.p4
	! echo | ${PROG} -c ${WORDS} -i ${top_srcdir}/test/data/abort0.p4
	! printf "INCLUDE ${top_srcdir}/test/data/abort0.p4" | ${PROG} -c ${WORDS}
	! printf "INCLUDE ${top_srcdir}/test/data/abort0.p4 \n BYE" | ${PROG} -c ${WORDS}
	@echo "-OK-"

# GH-54
test_include_throw: ${PROG}
	@printf "====  Testing INCLUDE with THROW\n"
	! ${PROG} -c ${WORDS} <${top_srcdir}/test/data/throw0.p4
	! echo | ${PROG} -c ${WORDS} ${top_srcdir}/test/data/throw0.p4
	! echo | ${PROG} -c ${WORDS} -i ${top_srcdir}/test/data/throw0.p4
	! printf "INCLUDE ${top_srcdir}/test/data/throw0.p4" | ${PROG} -c ${WORDS}
	! printf "INCLUDE ${top_srcdir}/test/data/throw0.p4 \n BYE" | ${PROG} -c ${WORDS}
	@echo "-OK-"

# GH-54 These tests have to be done manually, because the behaviour when
# input is redirected is slighty different and should pass, whereas manually
# we may see different result.
test_manual: ${PROG}
	! printf "INCLUDE ${top_srcdir}/test/data/quit0.p4 \n BYE" | ${PROG} -c ${WORDS}
	! printf "INCLUDE ${top_srcdir}/test/data/abort0.p4 \n BYE" | ${PROG} -c ${WORDS}
	! printf "INCLUDE ${top_srcdir}/test/data/throw0.p4 \n BYE" | ${PROG} -c ${WORDS}

# Test SEE against all words to check if any result in some failure like SEGFAULT.
see_all: ${PROG}
	echo WORDS | ${PROG} -c ${WORDS} \
	  | sed 's/[[:space:][:cntrl:]]*$$//; s/[^[:space:][:cntrl:]]*/SEE &/g'\
	  | ${PROG} -c ${WORDS} >see.out 2>&1
	@echo "-OK-"
